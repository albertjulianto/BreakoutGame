pipeline {
    agent any
    environment {
        SONAR_TOKEN = credentials('sonarqube-token')
    }

    stages {
        stage('Environment Info') {
            steps {
                script {
                    echo 'Checking environment variables and shell availability...'
                    // Print the PATH and check the availability of sh and bash
                    sh 'echo PATH=$PATH'
                    sh 'which bash || echo "bash not found"'
                    sh 'which sh || echo "sh not found"'
                }
            }
        }

        stage('Checkout') {
            steps {
                retry(3) {
                    git branch: 'main', url: 'https://github.com/albertjulianto/BreakoutGame.git'
                }
            }
        }

        stage('Build') {
            steps {
                script {
                    echo 'Building the BreakoutGame project...'
                    // Using /bin/bash explicitly for commands
                    sh '/bin/bash -c "dotnet restore"'  // Restore dependencies
                    sh '/bin/bash -c "dotnet build --configuration Release"'  // Build in Release mode
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    echo 'Running tests...'
                    // Add your testing steps here, if applicable
                    // Example: sh '/bin/bash -c "dotnet test"'
                }
            }
        }

        stage('Archive Build Artifacts') {
            steps {
                script {
                    echo 'Archiving the build artifacts...'
                    archiveArtifacts artifacts: '**/bin/Release/**', allowEmptyArchive: true
                }
            }
        }
    }

    post {
        always {
            script {
                cleanWs()  // Clean workspace after each run
            }
        }
        success {
            mail to: 'albertjulianto@gmail.com',
                 subject: "SUCCESS: Breakout Game #${env.BUILD_NUMBER}",
                 body: "The pipeline completed successfully!"
        }
        failure {
            mail to: 'albertjulianto@gmail.com',
                 subject: "FAILURE: Breakout Game #${env.BUILD_NUMBER}",
                 body: "The pipeline failed! Please check the Jenkins logs."
        }
    }
}
